import{R as y,bg as g,oJ as Q,oK as m,oL as f,oM as K}from"./hml6mmd5fyx85si7.js";import{l as p,n as d,e as q,u as h,y as M}from"./lu2xqwqmjc95q6j6.js";const D=({workspaceId:e,currentRoles:s,bootstrapResources:o})=>{const n=p(),i=g(),t=q(),{mutateAsync:r}=d({mutationFn:a=>y.safePost("/rbac/workspace/{workspace_id}/roles",{parameters:{query:{account_id:e},path:{workspace_id:e}},requestBody:{role_name:a.name,description:a.description,bootstrap_resources:o}}),onMutate:({name:a,description:u})=>{n.cancelQueries({queryKey:[e,"roles"]});const c=s;return n.setQueryData([e,"roles"],l=>(l||(l={data:[],object:"list",has_more:!1}),{...l,data:[{id:"new",name:a,permissions:[],resource_type:"workspace",predefined_role:!1,description:u,created_at:Date.now(),updated_at:Date.now(),created_by:"system",metadata:{}},...l.data]})),{previousRoles:c}},onError:(a,u,c)=>{n.setQueryData([e,"roles"],c?.previousRoles),n.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]}),a.message==="Role with this name already exists."&&i.warning(t.formatMessage({id:"Hn9Qxu",defaultMessage:"Role with this name already exists"}),{duration:1})},onSuccess:()=>{n.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]})}});return{createRole:r}},v=({workspaceId:e})=>{const s=p(),{mutateAsync:o}=d({mutationFn:async n=>await y.safeDelete("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:n}}}),onSettled:()=>{s.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]})}});return{deleteRole:o}},w=({workspaceId:e})=>{const s=p(),o=g(),n=q(),{mutateAsync:i}=d({mutationFn:async t=>(t.permissions.includes(Q.SearchAccess)||(t.permissions=t.permissions.filter(r=>r!==Q.AgentModeAccess&&r!==Q.DeepResearchAccess)),await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:t.id}},requestBody:{role_name:t.name,description:t.description,permissions:t.permissions}})),onMutate:({id:t,name:r,permissions:a})=>{const u=s.getQueryData([e,"role",t]);return s.setQueryData([e,"role",t],c=>({...c,name:r,permissions:a})),{previousRoles:u}},onError:(t,r,a)=>{s.setQueryData([e,"role",r.id],a?.previousRoles),t.message==="Role with this name already exists."?o.warning(n.formatMessage({id:"EDzkz/",defaultMessage:"Role with this name already exists"}),{duration:1}):o.danger(n.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:()=>{s.invalidateQueries({refetchType:"all",queryKey:[e,"roles"]}),o.success(n.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateRole:i}},P=({workspaceId:e,roleId:s})=>{const o=p(),{mutateAsync:n}=d({mutationFn:async({id:i})=>await y.safePost("/rbac/workspace/{workspace_id}/role-assignments",{parameters:{query:{account_id:e},path:{workspace_id:e}},requestBody:{role_id:s,principal_id:i,principal_type:"group"}}),onSuccess:(i,t)=>{const r=[e,s,"role-groups"];o.setQueryData(r,a=>[...a,{id:t.id,name:t.name??"",num_members:t.num_members??0,created_time:new Date().toDateString()}]),o.invalidateQueries({refetchType:"all",queryKey:r})}});return{assignGroup:n}},A=({workspaceId:e,roleId:s})=>{const o=p(),{mutateAsync:n}=d({mutationFn:async i=>await y.safeDelete("/rbac/workspace/{workspace_id}/role-assignments",{parameters:{query:{account_id:e,role_id:s,principal_id:i,principal_type:"group"},path:{workspace_id:e}}}),onSuccess:(i,t)=>{const r=[e,s,"role-groups"];o.setQueryData(r,a=>a?a.filter(u=>u.id!==t):[]),o.invalidateQueries({refetchType:"all",queryKey:r})}});return{unassignGroup:n}},S=({workspaceId:e,roleId:s,showToast:o=!0})=>{const n=p(),i=g(),t=q(),{mutateAsync:r}=d({mutationFn:async a=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:s,connector_id:a.connectorId}},requestBody:{permissions:a.permissions}}),onMutate:({connectorId:a,permissions:u})=>{const c=n.getQueryData(m(e,s));return n.setQueryData(m(e,s),l=>({...l,connectors_with_permissions:l?.connectors_with_permissions.map(_=>_.connector.id===a?{..._,permissions:u}:_)})),{previousConnectors:c}},onError:(a,u,c)=>{n.setQueryData(m(e,s),c?.previousConnectors),o&&i.danger(t.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(a,u)=>{n.invalidateQueries({refetchType:"all",queryKey:m(e,s)}),n.invalidateQueries({refetchType:"all",queryKey:f(e,u.connectorId)}),n.invalidateQueries({refetchType:"all",queryKey:K(e,u.connectorId,s)}),o&&i.success(t.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateRoleConnectorPermission:r}},T=({workspaceId:e,connectorId:s,showToast:o=!0})=>{const n=p(),i=g(),t=q(),{mutateAsync:r,isPending:a}=d({mutationFn:async u=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:u.roleId,connector_id:s}},requestBody:{permissions:u.permissions}}),onMutate:({roleId:u,permissions:c})=>{const l=n.getQueryData(f(e,s));return n.setQueryData(f(e,s),_=>({..._,roles_with_permissions:_?.roles_with_permissions?.map(R=>R.role.id===u?{...R,connector_permissions:c}:R)})),{previousRoles:l}},onError:(u,c,l)=>{n.setQueryData(f(e,s),l?.previousRoles),o&&i.danger(t.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(u,c)=>{n.invalidateQueries({refetchType:"all",queryKey:f(e,s)}),n.invalidateQueries({refetchType:"all",queryKey:m(e,c.roleId)}),n.invalidateQueries({refetchType:"all",queryKey:K(e,s,c.roleId)}),o&&i.success(t.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{updateConnectorRolePermission:r,isPending:a}},G=({workspaceId:e,showToast:s=!0})=>{const o=g(),n=q(),i=p(),{mutateAsync:t,isPending:r}=d({mutationFn:async a=>await y.safePatch("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors",{parameters:{query:{account_id:e},path:{workspace_id:e,role_id:a.id}},requestBody:{state:a.state}}),onError:()=>{s&&o.danger(n.formatMessage({id:"ezIZZO",defaultMessage:"Failed to update permission"}),{duration:1})},onSuccess:(a,u)=>{i.invalidateQueries({refetchType:"all",queryKey:m(e,u.id)}),s&&o.success(n.formatMessage({id:"L59KWu",defaultMessage:"Successfully updated permission"}),{duration:1})}});return{toggleAllConnectorsPermissionForRole:t,isPending:r}},L=({workspaceId:e,roleId:s})=>h({queryKey:[e,"role",s],enabled:!!s,queryFn:async()=>(await y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s}}})).role,staleTime:1e3*60*5}),E=({workspaceId:e,enabled:s=!0})=>h({queryKey:[e,"roles"],queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e}}}),enabled:s}),Z=({workspaceId:e,roleId:s})=>h({queryKey:[e,s,"role-groups"],queryFn:async()=>(await y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/principals",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s}}})).groups}),x=({accountId:e,workspaceId:s,roleId:o,enabled:n=!0})=>{const{data:i,isLoading:t,isFetching:r,error:a,refetch:u}=h({queryKey:m(s,o),queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:s,role_id:o}}}),enabled:n});return{connectorsWithPermission:new Map(i?.connectors_with_permissions?.map(l=>[l.connector.id,l])),isLoading:t,isFetching:r,error:a,refetch:u}},z=({workspaceId:e,connectorId:s,enabled:o=!0})=>h({queryKey:["roles",e,s],queryFn:()=>y.safeGet("/rbac/workspace/{workspace_id}/connector/{connector_id}/roles",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,connector_id:s}}}),enabled:o}),F=({workspaceId:e,roleId:s,connectorId:o})=>y.safeGet("/rbac/workspace/{workspace_id}/roles/{role_id}/connectors/{connector_id}",{parameters:{query:{account_id:e,consistency:"strong"},path:{workspace_id:e,role_id:s,connector_id:o}}}),B=({workspaceId:e,roleId:s,connectorIds:o,enabled:n=!0})=>M({queries:o.map(i=>({queryKey:K(e,i,s),queryFn:async()=>{try{return await F({workspaceId:e,connectorId:i,roleId:s})}catch(t){if((t?.status??t?.response?.status??t?.code)===404)return{permissions:[]};throw t}},enabled:n})),combine:i=>{const t={};return i.forEach((r,a)=>{const u=o[a];r.data?t[u]=r.data.permissions:t[u]=[]}),{results:t,isLoading:i.some(r=>r.isLoading),isFetching:i.some(r=>r.isFetching),isError:i.some(r=>r.isError&&r.error?.status!==404),errors:i.map(r=>r.error).filter(r=>r?.status!==404)}}});export{P as a,A as b,L as c,v as d,w as e,S as f,G as g,x as h,B as i,E as j,D as k,z as l,T as m,Z as u};
//# sourceMappingURL=kzf8idfnvo156ew7.js.map
