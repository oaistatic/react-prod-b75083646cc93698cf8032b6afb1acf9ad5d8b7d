import{a as m,aJ as C,fa as n,b7 as l,jc as _}from"./hml6mmd5fyx85si7.js";import{C as g}from"./m68celnbq0esehhj.js";import{a as f}from"./lu2xqwqmjc95q6j6.js";function S(a,e){return`/checkout/${a}/${e}`}const h="3950229590",T="enabled_custom_checkout_for_plus",k="enabled_custom_checkout_for_pro",d="enabled_custom_checkout_for_team",O="enable_flush_statsig_on_checkout",r="chatgpt_web_checkout_navigate_to_checkout",A="chatgpt_web_checkout_prepare_checkout_session";function N(a){switch(a){case _.PLUS:return T;case _.PRO:return k;case _.TEAM:return d;default:return null}}function U(a,e){const o=N(e);return o==null?"redirect":C(a,h).get(o,!1)?"custom":"redirect"}function K(){const a=f(),e=m();async function o(t=1e3){const s=l(e);await Promise.race([s.flush(),new Promise(c=>setTimeout(c,t))])}async function i(t){return t.checkout_ui_mode=U(e,t.plan_name),n(e,{eventName:A,metadata:{ui_mode:t.checkout_ui_mode}}),await g.getCheckoutLink(t)}async function u(t){const s=C(e,h).get(O,!1);if("tag"in t)switch(n(e,{eventName:r,metadata:{tag:t.tag}}),s&&await o(),t.tag){case"hosted_checkout_session":case"redirect_to_portal":{window.location.href=t.url;break}case"custom_checkout_session":{const c=t.processor_entity,E=t.checkout_session_id;await a({pathname:S(c,E),search:"",hash:""});break}}else if(t.url)n(e,{eventName:r,metadata:{tag:"missing_tag"}}),s&&await o(),window.location.href=t.url;else throw new Error("Received invalid response from /checkout")}return{prepareCheckoutSession:i,navigateToCheckout:u}}export{K as u};
//# sourceMappingURL=i4sx5w9qnb2pqgar.js.map
